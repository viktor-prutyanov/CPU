module flash_spi
(
    input CLK,

    output FLASH_CLK, 
    output reg FLASH_CS, FLASH_DI,
    input FLASH_DO,

    output reg [7:0]OUT_DATA,
    output reg NEW_OUT_DATA
);

initial FLASH_CS = 1'b1;

reg [7:0]istruction;
initial istruction = 8'h90;

reg [4:0]bit_num;
initial bit_num = 5'b0;

assign FLASH_CLK = CLK;

reg [2:0]spi_state;
initial spi_state = 3'b100;

always @(posedge FLASH_CLK) begin
    case (spi_state)
        3'b000: begin
            FLASH_CS = 1'b0;
            FLASH_DI = istruction[bit_num[2:0]];
            bit_num = bit_num + 5'b1;
            if (bit_num == 5'b1000) begin
                bit_num = 5'b0;
                spi_state = 3'b001;
            end
        end
        3'b001: begin
            FLASH_CS = 1'b0;
            FLASH_DI = 1'b0;
            bit_num = bit_num + 5'b1;
            if (bit_num == 5'b11000) begin
                bit_num = 5'b0;
                spi_state = 3'b010;
                NEW_OUT_DATA <= 1'b1;
            end
        end
        3'b010: begin
            NEW_OUT_DATA <= 1'b0;
            FLASH_CS = 1'b0;
            OUT_DATA[bit_num[2:0]] = FLASH_DO;
            bit_num = bit_num + 5'b1;
            if (bit_num == 5'b1000) begin
                bit_num = 5'b0;
                spi_state = 3'b011;
                NEW_OUT_DATA <= 1'b1;
            end
        end
        3'b011: begin
            NEW_OUT_DATA <= 1'b0;
            FLASH_CS = 1'b0;
            FLASH_CS = 1'b0;
            OUT_DATA[bit_num[2:0]] = FLASH_DO;
            bit_num = bit_num + 5'b1;
            if (bit_num == 5'b1000) begin
                bit_num = 5'b0;
                spi_state = 3'b100;
                NEW_OUT_DATA = 1'b1;
            end
        end
        default: begin
            FLASH_CS = 1'b1;
            NEW_OUT_DATA = 1'b0;
        end 
    endcase
end

endmodule